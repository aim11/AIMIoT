//Rules in Jena rules format


//Just testing instances
//[Jam:  (?jsp1 rdf:type obs:JamSpeed1) -> [ (?o1 rdf:type obs:Jam) <- (?o1 rdf:type obs:Observation) (?o1 obs:hasVelocity ?v) (?o1 obs:hasID ?obsID) (?o1 obs:hasSender ?obsSend) lessThan(?v, 25.0)  greaterThan(?v, 1.0) makeInstance(?o1, ?v, obs:JamSpeed1, ?jsp1)]]
//[Test:  [(?jsp2 rdf:type obs:JamSpeed2)  <- (?o1 rdf:type obs:Observation)(?jsp1 rdf:type obs:JamSpeed1)(?jsp1 obs:hasID ?ID1) (?o1 obs:hasID ?ID2) (?o1 obs:hasSender ?s) (?jsp1  obs:hasSender ?s) sum(?ID1, '1'^^xsd:integer,?ID2) makeInstance(?o1, ?v, obs:JamSpeed2, ?jsp2)] -> [(?jsp1 rdf:type obs:JamSpeed1) <- (?o1 rdf:type obs:Observation) (?o1 obs:hasVelocity ?v) (?o1 obs:hasID ?obsID) (?o1 obs:hasSender ?obsSend) lessThan(?v, 25.0)  greaterThan(?v, 1.0) makeInstance(?o1, ?v, obs:JamSpeed1, ?jsp1) makeInstance(?o1, ?v, obs:Observation, ?obs)]]
//[JamSpeed3: (?jsp2 rdf:type obs:JamSpeed3) <- (?j1 rdf:type obs:JamSpeed2) (?o rdf:type obs:JamSpeed2) (?j1 obs:hasID ?ID1) (?o obs:hasID ?ID2) (?j1 obs:hasSender ?s) (?o obs:hasSender ?s) (?o obs:hasVelocity ?v) sum(?ID1, '1'^^xsd:integer,?ID2)  lessThan(?v, 25.0) greaterThan(?v, 1.0) makeInstance(?o, ?v, obs:JamSpeed3, ?jsp2)]
//[JamSpeed2: (?jsp2 rdf:type obs:JamSpeed2) <- (?j1 rdf:type obs:JamSpeed1) (?o rdf:type obs:JamSpeed1) (?j1 obs:hasID ?ID1) (?o obs:hasID ?ID2) (?j1 obs:hasSender ?s) (?o obs:hasSender ?s) (?o obs:hasVelocity ?v) sum(?ID1, '1'^^xsd:integer,?ID2)  lessThan(?v, 25.0) greaterThan(?v, 1.0) makeInstance(?o, ?v, obs:JamSpeed2, ?jsp2)]

//Jams
[JamSpeed1: (?o1 rdf:type obs:Observation) (?o1 obs:hasVelocity ?v) lessThan(?v, 25.0)  greaterThan(?v, 1.0)  -> (?o1 rdf:type obs:JamSpeed1)]
//[JamSpeed5: (?j1 rdf:type obs:JamSpeed4) (?o rdf:type obs:JamSpeed4) (?j1 obs:hasID ?ID1) (?o obs:hasID ?ID2) (?j1 obs:hasSender ?s) (?o obs:hasSender ?s) (?o obs:hasVelocity ?v) sum(?ID1, '1'^^xsd:integer,?ID2)  lessThan(?v, 25.0)  greaterThan(?v, 1.0) -> (?o rdf:type obs:JamSpeed5)]
[JamSpeed4: (?j1 rdf:type obs:JamSpeed3) (?o rdf:type obs:JamSpeed3) (?j1 obs:hasID ?ID1) (?o obs:hasID ?ID2) (?j1 obs:hasSender ?s) (?o obs:hasSender ?s) (?o obs:hasVelocity ?v) sum(?ID1, '1'^^xsd:integer,?ID2)  lessThan(?v, 25.0)  greaterThan(?v, 1.0) -> (?o rdf:type obs:JamSpeed4)]
[JamSpeed3: (?j1 rdf:type obs:JamSpeed2) (?o rdf:type obs:JamSpeed2) (?j1 obs:hasID ?ID1) (?o obs:hasID ?ID2) (?j1 obs:hasSender ?s) (?o obs:hasSender ?s) (?o obs:hasVelocity ?v) sum(?ID1, '1'^^xsd:integer,?ID2)  lessThan(?v, 25.0)  greaterThan(?v, 1.0) -> (?o rdf:type obs:JamSpeed3)]
[JamSpeed2: (?j1 rdf:type obs:JamSpeed1) (?o rdf:type obs:JamSpeed1) (?j1 obs:hasID ?ID1) (?o obs:hasID ?ID2) (?j1 obs:hasSender ?s) (?o obs:hasSender ?s) (?o obs:hasVelocity ?v) sum(?ID1, '1'^^xsd:integer,?ID2)  lessThan(?v, 25.0)  greaterThan(?v, 1.0) -> (?o rdf:type obs:JamSpeed2)]

//[Jam: (?j1 rdf:type obs:JamSpeed1) (?o rdf:type obs:Observation) (?j1 obs:hasDate ?dt1) (?o1 obs:hasDate ?dt2) (?j1 obs:hasID ?ID1) (?o obs:hasID ?oID1) (?o obs:hasID ?oID2) (?j1 obs:hasSender ?s) (?o obs:hasSender ?s) (?j1 obs:hasVelocity ?v1) (?o obs:hasVelocity ?v) sum(?ID1, '1'^^xsd:integer, ?oID1)  sum(?ID1, "2"^^xsd:integer, ?oID2)  sum(?v, ?v1,?spsum)  lessThan(?spsum, 30) -> (?o rdf:type obs:Jam)]
[Jam: (?jsp1 rdf:type obs:JamSpeed1) (?jsp2 rdf:type obs:JamSpeed2) (?jsp1 obs:hasDate ?dt1) (?jsp2 obs:hasDate ?dt2) (?jsp1 obs:hasID ?jspID1) (?jsp2 obs:hasID ?jspID2) sum(?jspID1, '1'^^xsd:integer, ?jspID2)  (?jsp1 obs:hasSender ?js1) (?jsp2 obs:hasSender ?js1)  (?jsp1 obs:hasVelocity ?sp1) (?jsp2 obs:hasVelocity ?sp2) sum(?dt1, 90000, ?plus2min)  sum(?sp1, ?sp2,?spsum)  greaterThan(?dt2, ?plus2min)  lessThan(?spsum, 40)  difference(?dt2, ?dt1, ?dur)  (?jsp1 obs:hasLatitude ?lat1) (?jsp1 obs:hasLongitude ?lon1) -> (?jsp2 rdf:type obs:Jam) (?jsp2 obs:hasDuration ?dur) (?jsp2 obs:hasStartLatitude ?lat1)  (?jsp2 obs:hasStartLongitude ?lon1)]
[Jam: (?jsp1 rdf:type obs:JamSpeed1) (?jsp2 rdf:type obs:JamSpeed2) (?jsp3 rdf:type obs:JamSpeed3) (?jsp1 obs:hasDate ?dt1) (?jsp3 obs:hasDate ?dt3) (?jsp1 obs:hasID ?jspID1) (?jsp2 obs:hasID ?jspID2) (?jsp3 obs:hasID ?jspID3) (?jsp1 obs:hasLatitude ?lat1) (?jsp1 obs:hasLongitude ?lon1) (?jsp1 obs:hasSender ?js1) (?jsp2 obs:hasSender ?js1)  (?jsp3 obs:hasSender ?js1)  (?jsp1 obs:hasVelocity ?sp1) (?jsp2 obs:hasVelocity ?sp2) (?jsp3 obs:hasVelocity ?sp3) sum(?jspID1, '1'^^xsd:integer, ?jspID2)  sum(?jspID2, '1'^^xsd:integer, ?jspID3)  sum(?dt1, 90000, ?plus2min) sum(?sp1, ?sp2, ?spsum1) sum(?sp3, ?spsum1, ?spsum) greaterThan(?dt3, ?plus2min)  lessThan(?spsum, 60)  difference(?dt3, ?dt1, ?dur) -> (?jsp3 rdf:type obs:Jam) (?jsp3 obs:hasDuration ?dur) (?jsp3 obs:hasStartLatitude ?lat1) (?jsp3 obs:hasStartLongitude ?lon1)]
[Jam: (?jsp1 rdf:type obs:JamSpeed1) (?jsp2 rdf:type obs:JamSpeed2) (?jsp3 rdf:type obs:JamSpeed3) (?jsp4 rdf:type obs:JamSpeed4) (?jsp1 obs:hasDate ?dt1) (?jsp4 obs:hasDate ?dt4) (?jsp1 obs:hasID ?jspID1) (?jsp2 obs:hasID ?jspID2) (?jsp3 obs:hasID ?jspID3) (?jsp4 obs:hasID ?jspID4) sum(?jspID1, '1'^^xsd:integer, ?jspID2)  sum(?jspID2, '1'^^xsd:integer,?jspID3)  sum(?jspID3, '1'^^xsd:integer, ?jspID4)  (?jsp1 obs:hasLatitude ?lat1) (?jsp1 obs:hasLongitude ?lon1) (?jsp1 obs:hasSender ?js1) (?jsp2 obs:hasSender ?js1) (?jsp3 obs:hasSender ?js1) (?jsp4 obs:hasSender ?js1)  (?jsp1 obs:hasVelocity ?sp1) (?jsp2 obs:hasVelocity ?sp2) (?jsp3 obs:hasVelocity ?sp3) (?jsp4 obs:hasVelocity ?sp4) sum(?dt1, 90000, ?plus2min)  sum(?sp1, ?sp2, ?spsum1) sum(?sp3, ?sp4, ?spsum2) sum(?spsum1, ?spsum2, ?spsum)  greaterThan(?dt4, ?plus2min)  lessThan(?spsum, 80)  difference(?dt4, ?dt1, ?dur) -> (?jsp4 rdf:type obs:Jam) (?jsp4 obs:hasDuration ?dur) (?jsp4 obs:hasStartLatitude ?lat1) (?jsp4 obs:hasStartLongitude ?lon1)]
//[Jam: (?jsp1 rdf:type obs:JamSpeed1) (?jsp2 rdf:type obs:JamSpeed2) (?jsp3 rdf:type obs:JamSpeed3) (?jsp4 rdf:type obs:JamSpeed4) (?jsp5 rdf:type obs:JamSpeed5) (?jsp1 obs:hasDate ?dt1) (?jsp5 obs:hasDate ?dt5) (?jsp1 obs:hasID ?jspID1) (?jsp2 obs:hasID ?jspID2) (?jsp3 obs:hasID ?jspID3) (?jsp4 obs:hasID ?jspID4) (?jsp5 obs:hasID ?jspID5) sum(?jspID1, '1'^^xsd:integer, ?jspID2)  sum(?jspID2, '1'^^xsd:integer, ?jspID3)  sum(?jspID3, '1'^^xsd:integer, ?jspID4)  sum(?jspID4, '1'^^xsd:integer, ?jspID5)  (?jsp1 obs:hasLatitude ?lat1) (?jsp1 obs:hasLongitude ?lon1) (?jsp1 obs:hasSender ?js1) (?jsp2 obs:hasSender ?js1)  (?jsp3 obs:hasSender ?js1)  (?jsp4 obs:hasSender ?js1) (?jsp5 obs:hasSender ?js1)  (?jsp1 obs:hasVelocity ?sp1) (?jsp2 obs:hasVelocity ?sp2) (?jsp3 obs:hasVelocity ?sp3) (?jsp4 obs:hasVelocity ?sp4) (?jsp5 obs:hasVelocity ?sp5)  sum(?dt1, 90000, ?plus2min)  sum(?sp1, ?sp2, ?spsum1) sum(?sp3, ?sp4, ?spsum2) sum(?spsum1, ?spsum2, ?spsum3), sum(?spsum3 ?sp5 ?spsum) greaterThan(?dt5, ?plus2min)  lessThan(?spsum, 100)  difference(?dt5, ?dt1, ?dur) -> (?jsp5 rdf:type obs:Jam) (?jsp5 obs:hasDuration ?dur)  (?jsp5 obs:hasStartLatitude ?lat1) (?jsp5 obs:hasStartLongitude ?lon1)]

//BACKWARDS body clauses can not be backwarded because head rule needs materialized instances, allows only 15 variables in clause
//took 19685ms with 13k triples
//[Jam: (?jsp3 rdf:type obs:Jam) <- (?jsp1 rdf:type obs:JamSpeed1) (?jsp2 rdf:type obs:JamSpeed2) (?jsp3 rdf:type obs:JamSpeed3) (?jsp1 obs:hasDate ?dt1) (?jsp3 obs:hasDate ?dt3) (?jsp1 obs:hasID ?jspID1) (?jsp2 obs:hasID ?jspID2) (?jsp3 obs:hasID ?jspID3) (?jsp1 obs:hasLatitude ?lat1) (?jsp1 obs:hasLongitude ?lon1) (?jsp1 obs:hasSender ?js1) (?jsp2 obs:hasSender ?js1)  (?jsp3 obs:hasSender ?js1)  (?jsp1 obs:hasVelocity ?sp1) (?jsp2 obs:hasVelocity ?sp2) (?jsp3 obs:hasVelocity ?sp3) sum(?jspID1, '1'^^xsd:integer, ?jspID2)  sum(?jspID2, '1'^^xsd:integer, ?jspID3)  sum(?dt1, 90000, ?plus2min) sum(?sp1, ?sp2, ?spsum1) sum(?sp3, ?spsum1, ?spsum) greaterThan(?dt3, ?plus2min)  lessThan(?spsum, 60)  difference(?dt3, ?dt1, ?dur)]

//Stops
//
[Stop1: (?o rdf:type obs:Observation) (?o obs:hasVelocity ?v) lessThan(?v, "3"^^xsd:integer) -> (?o rdf:type obs:Stop1)]
[Stop2: (?o rdf:type obs:Stop1) (?j1 rdf:type obs:Stop1) (?j1 obs:hasID ?ID1) (?o obs:hasID ?ID2) (?j1 obs:hasSender ?s) (?o obs:hasSender ?s) (?o obs:hasVelocity ?v) sum(?ID1, '1'^^xsd:integer,?ID2)  lessThan(?v, 3) -> (?o rdf:type obs:Stop2)]
[Stop4: (?o rdf:type obs:Stop3) (?j1 rdf:type obs:Stop3) (?j1 obs:hasID ?ID1) (?o obs:hasID ?ID2) (?j1 obs:hasSender ?s) (?o obs:hasSender ?s) (?o obs:hasVelocity ?v) sum(?ID1, '1'^^xsd:integer,?ID2)  lessThan(?v, 3) -> (?o rdf:type obs:Stop4)]
[Stop3: (?o rdf:type obs:Stop2) (?j1 rdf:type obs:Stop2) (?j1 obs:hasID ?ID1) (?o obs:hasID ?ID2) (?j1 obs:hasSender ?s) (?o obs:hasSender ?s) (?o obs:hasVelocity ?v) sum(?ID1, '1'^^xsd:integer,?ID2)  lessThan(?v, 3) -> (?o rdf:type obs:Stop3)]
//[hasDuration: (?ls rdf:type obs:LongStop) (?st rdf:type obs:Stop1) (?ls obs:hasDate ?lsdt) (?st obs:hasDate ?sdt) (?j1 obs:hasSender ?s) (?ls obs:hasSender ?s)  difference(?lsdt, ?sdt, ?dur) -> (?ls obs:hasDuration ?dur)]
[LongStop: (?jsp1 rdf:type obs:Stop1) (?jsp2 rdf:type obs:Stop2) (?jsp1 obs:hasDate ?dt1) (?jsp2 obs:hasDate ?dt2) (?jsp1 obs:hasSender ?js1) (?jsp2 obs:hasSender ?js2) sum(?dt1, 60000, ?plus1min)  equal(?js2, ?js1)  greaterThan(?dt2, ?plus1min) -> (?jsp2 rdf:type obs:LongStop)]
[LongStop: (?jsp1 rdf:type obs:Stop1) (?jsp4 rdf:type obs:Stop4) (?jsp1 obs:hasDate ?dt1) (?jsp4 obs:hasDate ?dt4) (?jsp1 obs:hasSender ?js1) (?jsp4 obs:hasSender ?js4) sum(?dt1, 60000, ?plus1min)  equal(?js1, ?js4)  greaterThan(?dt4, ?plus1min) -> (?jsp4 rdf:type obs:LongStop)]
[LongStop: (?jsp1 rdf:type obs:Stop1) (?jsp2 rdf:type obs:Stop2) (?jsp3 rdf:type obs:Stop3) (?jsp1 obs:hasDate ?dt1) (?jsp3 obs:hasDate ?dt3) (?jsp1 obs:hasSender ?js1) (?jsp2 obs:hasSender ?js2) (?jsp3 obs:hasSender ?js3) sum(?dt1, 60000, ?plus1min)  equal(?js2, ?js1)  equal(?js3, ?js3)  greaterThan(?dt3, ?plus1min) -> (?jsp3 rdf:type obs:LongStop)]
[VeryLongStop: (?ls rdf:type obs:LongStop) (?ls obs:hasDuration ?dur)  greaterThan(?dur, 180000) -> (?ls rdf:type obs:VeryLongStop) (?ls obs:hasDuration ?dur)]


////Avg speed
[HighAvgSpeed1: (?o1 rdf:type obs:Observation) (?o1 obs:hasVelocity ?v) greaterThan(?v, 80) -> (?o1 rdf:type obs:HighAvgSpeed1)]
[HighAvgSpeed2: (?j1 rdf:type obs:HighAvgSpeed1) (?o rdf:type obs:HighAvgSpeed1) (?j1 obs:hasID ?ID1) (?o obs:hasID ?ID2) (?j1 obs:hasSender ?s) (?o obs:hasSender ?s) (?o1 obs:hasVelocity ?v1) sum(?ID1, '1'^^xsd:integer,?ID2)  greaterThan(?v1, 80) -> (?o rdf:type obs:HighAvgSpeed2)]
[HighAvgSpeed3: (?j1 rdf:type obs:HighAvgSpeed2) (?o rdf:type obs:HighAvgSpeed2) (?j1 obs:hasID ?ID1) (?o obs:hasID ?ID2) (?j1 obs:hasSender ?s) (?o obs:hasSender ?s) (?o1 obs:hasVelocity ?v1) sum(?ID1, '1'^^xsd:integer,?ID2)  greaterThan(?v1, 80) -> (?o rdf:type obs:HighAvgSpeed3)]
[HighAvgSpeed4: (?j1 rdf:type obs:HighAvgSpeed3) (?o rdf:type obs:HighAvgSpeed3) (?j1 obs:hasID ?ID1) (?o obs:hasID ?ID2) (?j1 obs:hasSender ?s) (?o obs:hasSender ?s) (?o1 obs:hasVelocity ?v1) sum(?ID1, '1'^^xsd:integer,?ID2)  greaterThan(?v1, 80) -> (?o rdf:type obs:HighAvgSpeed4)]
[HighAvgSpeed: (?jsp1 rdf:type obs:HighAvgSpeed1)(?jsp2 rdf:type obs:HighAvgSpeed2) (?jsp3 rdf:type obs:HighAvgSpeed3) (?jsp4 rdf:type obs:HighAvgSpeed4) (?jsp1 obs:hasDate ?dt1) (?jsp4 obs:hasDate ?dt4) (?jsp1 obs:hasLatitude ?lat1) (?jsp1 obs:hasLongitude ?lon1) (?jsp1 obs:hasSender ?js1) (?jsp2 obs:hasSender ?js2) (?jsp3 obs:hasSender ?js3) (?jsp4 obs:hasSender ?js4) (?jsp1 obs:hasVelocity ?sp1) (?jsp2 obs:hasVelocity ?sp2) (?jsp3 obs:hasVelocity ?sp3) (?jsp4 obs:hasVelocity ?sp4) sum(?dt1, 120000, ?plus2min)  sum(?sp1, ?sp2, ?spsum1) sum(?sp3, ?sp4, ?spsum2), sum(?spsum1, ?spsum2, ?spsum)  equal(?js1, ?js2)  equal(?js2, ?js3)  equal(?js3, ?js4)  greaterThan(?dt4, ?plus2min)  greaterThan(?spsum, 320)  difference(?dt4, ?dt1, ?dur) -> (?jsp4 rdf:type obs:HighAvgSpeed)  (?jsp4 obs:hasDuration ?dur)  (?jsp4 obs:hasStartLatitude ?lat1)  (?jsp4 obs:hasStartLongitude ?lon1)]
//
//[Motorway: (?avgsp rdf:type obs:HighAvgSpeed) -> (?avgsp rdf:type obs:Motorway)]
//

[LowSpeed: (?o rdf:type obs:Observation) (?o obs:hasVelocity ?v) lessThan(?v, "30"^^xsd:integer) -> (?o rdf:type obs:LowSpeed)]

//Turns
[RightTurn: (?lsp rdf:type obs:LowSpeed) (?o rdf:type obs:Observation) (?lsp obs:hasDirection ?dir1) (?o obs:hasDirection ?dir2) (?lsp obs:hasID ?ID1) (?o obs:hasID ?ID2) (?lsp obs:hasSender ?s) (?o obs:hasSender ?s) sum(?ID1, '1'^^xsd:integer,?ID2)  sum(?dir1, "80"^^xsd:integer, ?sumdir1) sum(?dir1, "100"^^xsd:integer, ?sumdir2) greaterThan(?dir2, ?sumdir1) lessThan(?dir2, ?sumdir2) -> (?o rdf:type obs:RightTurn)]
[RightTurn: (?lsp rdf:type obs:LowSpeed) (?o rdf:type obs:Observation) (?lsp obs:hasDirection ?dir1) (?o obs:hasDirection ?dir2) (?lsp obs:hasID ?ID1) (?o obs:hasID ?ID2) (?lsp obs:hasSender ?s) (?o obs:hasSender ?s) sum(?ID1, '1'^^xsd:integer,?ID2)  difference(?dir1, "280"^^xsd:integer, ?subdir1) difference(?dir1, "260"^^xsd:integer, ?subdir2) greaterThan(?dir2, ?subdir1) lessThan(?dir2, ?subdir2)-> (?o rdf:type obs:RightTurn)]
[LeftTurn: (?lsp rdf:type obs:LowSpeed) (?o rdf:type obs:Observation) (?lsp obs:hasDirection ?dir1) (?o obs:hasDirection ?dir2) (?lsp obs:hasID ?ID1) (?o obs:hasID ?ID2) (?lsp obs:hasSender ?s) (?o obs:hasSender ?s) sum(?ID1, '1'^^xsd:integer,?ID2)  difference(?dir1, "80"^^xsd:integer, ?subdir1) difference(?dir1, "100"^^xsd:integer, ?subdir2) greaterThan(?dir2, ?subdir2) lessThan(?dir2, ?subdir1)-> (?o rdf:type obs:LeftTurn)]
[LeftTurn: (?lsp rdf:type obs:LowSpeed) (?o rdf:type obs:Observation) (?lsp obs:hasDirection ?dir1) (?o obs:hasDirection ?dir2) (?lsp obs:hasID ?ID1) (?o obs:hasID ?ID2) (?lsp obs:hasSender ?s) (?o obs:hasSender ?s) sum(?ID1, '1'^^xsd:integer,?ID2)  sum(?dir1, "280"^^xsd:integer, ?sumdir1) sum(?dir1, "260"^^xsd:integer, ?sumdir2) greaterThan(?dir2, ?sumdir2) lessThan(?dir2, ?sumdir1)  -> (?o rdf:type obs:LeftTurn)]
[UTurn: (?lsp rdf:type obs:LowSpeed) (?o rdf:type obs:Observation) (?lsp obs:hasDirection ?dir1) (?o obs:hasDirection ?dir2) (?lsp obs:hasID ?ID1) (?o obs:hasID ?ID2) (?lsp obs:hasSender ?s) (?o obs:hasSender ?s) sum(?ID1, '1'^^xsd:integer,?ID2)  difference(?dir1, "190"^^xsd:integer, ?subdir1) difference(?dir1, "170"^^xsd:integer, ?subdir2) greaterThan(?dir2, ?subdir1) lessThan(?dir2, ?subdir2) -> (?o rdf:type obs:UTurn)]
[UTurn: (?lsp rdf:type obs:LowSpeed) (?o rdf:type obs:Observation) (?lsp obs:hasDirection ?dir1) (?o obs:hasDirection ?dir2) (?lsp obs:hasID ?ID1) (?o obs:hasID ?ID2) (?lsp obs:hasSender ?s) (?o obs:hasSender ?s) sum(?ID1, '1'^^xsd:integer,?ID2)  sum(?dir1, "190"^^xsd:integer, ?sumdir1) sum(?dir1, "170"^^xsd:integer, ?sumdir2) greaterThan(?dir2, ?sumdir2) lessThan(?dir2, ?sumdir1) -> (?o rdf:type obs:UTurn)]
//
//
//[UTurn: (?lsp rdf:type obs:HighDeacceleration) (?o rdf:type obs:Observation) (?lsp obs:hasDirection ?dir1) (?o obs:hasDirection ?dir2) (?lsp obs:hasID ?ID1) (?o obs:hasID ?ID2) (?lsp obs:hasSender ?s) (?o obs:hasSender ?s) sum(?ID1, '1'^^xsd:integer,?ID2)  sum(?dir1, "180"^^xsd:integer, ?sumdir)  equal(?sumdir, ?dir2) -> (?o rdf:type obs:UTurn)]
//[UTurn: (?lsp rdf:type obs:HighDeacceleration) (?o rdf:type obs:Observation) (?lsp obs:hasDirection ?dir1) (?o obs:hasDirection ?dir2) (?lsp obs:hasID ?ID1) (?o obs:hasID ?ID2) (?lsp obs:hasSender ?s) (?o obs:hasSender ?s) sum(?ID1, '1'^^xsd:integer,?ID2)  equal(?subdir, ?dir2)  difference(?dir1, "180"^^xsd:integer, ?subdir) -> (?o rdf:type obs:UTurn)]

////Acceleration
//
[HighDeacceleration: (?o rdf:type obs:Observation) (?o obs:hasAcceleration ?a)  lessThan(?a, -0.7) -> (?o rdf:type obs:HighDeacceleration)]
[HighAcceleration: (?o rdf:type obs:Observation) (?o obs:hasAcceleration ?a)  greaterThan(?a, 0.7) -> (?o rdf:type obs:HighAcceleration)]


//Head clauses for reasoning over stored inferred instances at query-time
[Crossing: (?lt rdf:type obs:LeftTurn) (?rt rdf:type obs:RightTurn) (?lt obs:hasLatitude ?lat_lt) (?rt obs:hasLatitude ?lat_rt) (?lt obs:hasLongitude ?lon_lt) (?rt obs:hasLongitude ?lon_rt) greaterThan(?sublat, -2.0E-4)  lessThan(?sublat, 2.0E-4)  greaterThan(?sublon, -2.0E-4)  lessThan(?sublon, 2.0E-4) difference(?lat_rt, ?lat_lt, ?sublat)  difference(?lon_rt, ?lon_lt, ?sublon) -> (?rt rdf:type obs:Crossing)]
[HotSpot: (?s1 rdf:type obs:LongStop) (?s2 rdf:type obs:LongStop) (?s3 rdf:type obs:LongStop) (?s1 obs:hasLatitude ?lat1) (?s2 obs:hasLatitude ?lat2) (?s3 obs:hasLatitude ?lat3) (?s1 obs:hasLongitude ?lon1) (?s2 obs:hasLongitude ?lon2) (?s3 obs:hasLongitude ?lon3) (?s1 obs:hasSender ?snd1) (?s2 obs:hasSender ?snd2) (?s3 obs:hasSender ?snd3) greaterThan(?sublat1, -0.002)  greaterThan(?sublat2, -0.002)  greaterThan(?sublon1, -0.002)  greaterThan(?sublon2, -0.002)  lessThan(?sublat1, 0.002)  lessThan(?sublat2, 0.002)  lessThan(?sublon1, 0.002)  lessThan(?sublon2, 0.002)  notEqual(?snd1, ?snd2)  notEqual(?snd1, ?snd3)  notEqual(?snd3, ?snd2)  difference(?lat1, ?lat2, ?sublat1)  difference(?lat3, ?lat2, ?sublat2)  difference(?lon1, ?lon2, ?sublon1)  difference(?lon3, ?lon2, ?sublon2) -> (?s1 rdf:type obs:HotSpot)]
[JamZone: (?s1 rdf:type obs:Jam) (?s2 rdf:type obs:Jam) (?s3 rdf:type obs:Jam) (?s1 obs:hasLatitude ?lat1) (?s2 obs:hasLatitude ?lat2) (?s3 obs:hasLatitude ?lat3) (?s1 obs:hasLongitude ?lon1) (?s2 obs:hasLongitude ?lon2) (?s3 obs:hasLongitude ?lon3) (?s1 obs:hasSender ?snd1) (?s2 obs:hasSender ?snd2) (?s3 obs:hasSender ?snd3) greaterThan(?sublat1, -0.002)  greaterThan(?sublat2, -0.002)  greaterThan(?sublon1, -0.002)  greaterThan(?sublon2, -0.002)  lessThan(?sublat1, 0.002)  lessThan(?sublat2, 0.002)  lessThan(?sublon1, 0.002)  lessThan(?sublon2, 0.002)  notEqual(?snd1, ?snd2)  notEqual(?snd1, ?snd3)  notEqual(?snd3, ?snd2)  difference(?lat1, ?lat2, ?sublat1)  difference(?lat3, ?lat2, ?sublat2)  difference(?lon1, ?lon2, ?sublon1)  difference(?lon3, ?lon2, ?sublon2) -> (?s1 rdf:type obs:JamZone)]
[HighPollutionZone: (?s1 rdf:type obs:HighAcceleration) (?s2 rdf:type obs:HighAcceleration) (?s3 rdf:type obs:HighAcceleration) (?s1 obs:hasLatitude ?lat1) (?s2 obs:hasLatitude ?lat2) (?s3 obs:hasLatitude ?lat3) (?s1 obs:hasLongitude ?lon1) (?s2 obs:hasLongitude ?lon2) (?s3 obs:hasLongitude ?lon3) (?s1 obs:hasSender ?snd1) (?s2 obs:hasSender ?snd2) (?s3 obs:hasSender ?snd3) greaterThan(?sublat1, -0.002)  greaterThan(?sublat2, -0.002)  greaterThan(?sublon1, -0.002)  greaterThan(?sublon2, -0.002)  lessThan(?sublat1, 0.002)  lessThan(?sublat2, 0.002)  lessThan(?sublon1, 0.002)  lessThan(?sublon2, 0.002)  notEqual(?snd1, ?snd2)  notEqual(?snd1, ?snd3)  notEqual(?snd3, ?snd2)  difference(?lat1, ?lat2, ?sublat1)  difference(?lat3, ?lat2, ?sublat2)  difference(?lon1, ?lon2, ?sublon1)  difference(?lon3, ?lon2, ?sublon2) -> (?s1 rdf:type obs:HighPollutionZone)]
[UTurnZone: (?s1 rdf:type obs:UTurn) (?s2 rdf:type obs:UTurn) (?s3 rdf:type obs:UTurn) (?s1 obs:hasLatitude ?lat1) (?s2 obs:hasLatitude ?lat2) (?s3 obs:hasLatitude ?lat3) (?s1 obs:hasLongitude ?lon1) (?s2 obs:hasLongitude ?lon2) (?s3 obs:hasLongitude ?lon3) (?s1 obs:hasSender ?snd1) (?s2 obs:hasSender ?snd2) (?s3 obs:hasSender ?snd3) greaterThan(?sublat1, -0.002)  greaterThan(?sublat2, -0.002)  greaterThan(?sublon1, -0.002)  greaterThan(?sublon2, -0.002)  lessThan(?sublat1, 0.002)  lessThan(?sublat2, 0.002)  lessThan(?sublon1, 0.002)  lessThan(?sublon2, 0.002)  notEqual(?snd1, ?snd2)  notEqual(?snd1, ?snd3)  notEqual(?snd3, ?snd2)  difference(?lat1, ?lat2, ?sublat1)  difference(?lat3, ?lat2, ?sublat2)  difference(?lon1, ?lon2, ?sublon1)  difference(?lon3, ?lon2, ?sublon2) -> (?s1 rdf:type obs:UTurnZone)]

//[Crossing: (?lt rdf:type obs:LeftTurn) -> (?rt rdf:type obs:Crossing)]



